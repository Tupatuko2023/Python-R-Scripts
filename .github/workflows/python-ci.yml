name: python-ci

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          # Use built-in pip cache keyed by dependency files
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt
            **/pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ]; then pip install ".[test]" || pip install . || true; fi
          python -m pip install pytest pytest-cov junit-xml coverage || true

      - name: Run tests with coverage (robust; handles “no tests collected”)
        run: |
          mkdir -p test-results
          # Run pytest; capture exit code (pytest returns 5 if no tests collected)
          python -m pytest -q --cov --cov-report=xml --junitxml=test-results/junit.xml || code=$?
          code=${code:-0}
          if [ "$code" = "5" ]; then
            echo 'No tests collected; creating an empty JUnit report.'
            printf '<testsuite name="empty" tests="0" failures="0" errors="0" skipped="0"></testsuite>\n' > test-results/junit.xml
            exit 0
          fi
          exit "$code"

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore

      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: test-results/junit.xml
          if-no-files-found: warn
